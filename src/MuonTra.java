
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author MyPC
 */
public class MuonTra extends javax.swing.JFrame {

    KetNoiQLTV ketNoiQLTV = null;
    Connection connection = null;
    ArrayList<NhanVienType> listNhanVien = new ArrayList<>();
    ArrayList<DocGiaType> listDocGia = new ArrayList<>();
    ArrayList<MuonTraType> listMuonTra = new ArrayList<>();

    /**
     * Creates new form MuonTra
     */
    public MuonTra() throws ClassNotFoundException, SQLException {
        listNhanVien = NhanVienType.getList();
        listDocGia = DocGiaType.getList();
        listMuonTra = MuonTraType.getList();

        ketNoiQLTV = new KetNoiQLTV();
        connection = ketNoiQLTV.getJDBCConnection();
        initComponents();
        this.setLocationRelativeTo(null);
        //gọi hàm loadData trong phương thức Sach: 
        loadData();
        comboboxmaDG();
        comboboxmaNV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mamuontrachon = new javax.swing.JRadioButton();
        manhanvienchon = new javax.swing.JRadioButton();
        madocgiachon = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        mamuontratimkiem = new javax.swing.JComboBox();
        madocgiatimkiem = new javax.swing.JComboBox();
        manhanvientiemkiem = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mamuontratt = new javax.swing.JTextField();
        tennhanvientt = new javax.swing.JTextField();
        tendocgiatt = new javax.swing.JTextField();
        tiencoctt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        ngaymuontt = new com.toedter.calendar.JDateChooser();
        ngayhentratt = new com.toedter.calendar.JDateChooser();
        jButton12 = new javax.swing.JButton();
        manhanvienttI = new javax.swing.JComboBox();
        madocgiattI = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangmuontra = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HÀN TRUNG KIÊN 20162220");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("TÌM KẾM MƯỢN TRẢ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        buttonGroup1.add(mamuontrachon);
        mamuontrachon.setText("Mã mượn trả ");
        mamuontrachon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mamuontrachonActionPerformed(evt);
            }
        });

        buttonGroup1.add(manhanvienchon);
        manhanvienchon.setText("Mã nhân viên ");
        manhanvienchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manhanvienchonActionPerformed(evt);
            }
        });

        buttonGroup1.add(madocgiachon);
        madocgiachon.setText("Mã độc giả ");
        madocgiachon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                madocgiachonActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(102, 102, 102));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Search-icon.png"))); // NOI18N
        jButton5.setText("Tìm kiếm ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        mamuontratimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mamuontratimkiemActionPerformed(evt);
            }
        });

        madocgiatimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                madocgiatimkiemActionPerformed(evt);
            }
        });

        manhanvientiemkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manhanvientiemkiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(madocgiachon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manhanvienchon, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(mamuontrachon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manhanvientiemkiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(madocgiatimkiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mamuontratimkiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mamuontratimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mamuontrachon)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(madocgiachon)
                    .addComponent(madocgiatimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manhanvienchon)
                    .addComponent(manhanvientiemkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("NHẬP THÔNG TIN MƯỢN TRẢ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(151, 151, 151))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Mã mượn trả:");

        jLabel4.setText("Mã nhân viên:");

        jLabel5.setText("Mã độc giả:");

        jLabel6.setText("Ngày mượn:");

        jLabel7.setText("Ngày hẹn trả:");

        jLabel8.setText("Tiền cọc:");

        tennhanvientt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tennhanvienttActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insert-image-icon (1).png"))); // NOI18N
        jButton1.setText("Thêm ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-document-edit-icon.png"))); // NOI18N
        jButton2.setText("Sửa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Error-icon.png"))); // NOI18N
        jButton3.setText("Xóa ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 102, 102));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xem chi tiet.png"))); // NOI18N
        jButton4.setText("Xem Chi Tiết ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(102, 102, 102));
        jButton12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reset.png"))); // NOI18N
        jButton12.setText("Reset");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        manhanvienttI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manhanvienttIActionPerformed(evt);
            }
        });

        madocgiattI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                madocgiattIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(44, 44, 44)
                .addComponent(jButton3)
                .addGap(43, 43, 43)
                .addComponent(jButton12)
                .addGap(55, 55, 55))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tiencoctt)
                            .addComponent(ngaymuontt, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(ngayhentratt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mamuontratt)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(manhanvienttI, 0, 94, Short.MAX_VALUE)
                                    .addComponent(madocgiattI, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tennhanvientt)
                                    .addComponent(tendocgiatt)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mamuontratt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tennhanvientt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manhanvienttI, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tendocgiatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(madocgiattI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addComponent(ngaymuontt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(ngayhentratt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiencoctt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton12))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("DANH SÁCH HÓA ĐƠN MƯỢN TRẢ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        bangmuontra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bangmuontra);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton6.setBackground(new java.awt.Color(102, 102, 102));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow-back-icon.png"))); // NOI18N
        jButton6.setText("Quay lại ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Programming-Show-Property-icon.png"))); // NOI18N
        jButton7.setText("Hiển thị toàn bộ danh sách");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        jButton9.setBackground(new java.awt.Color(102, 102, 102));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/themfile.png"))); // NOI18N
        jButton9.setText("Thêm file");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(102, 102, 102));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Word-icon.png"))); // NOI18N
        jButton10.setText("Xuất file");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(102, 102, 102));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thongke.png"))); // NOI18N
        jButton11.setText("Thống kê ");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton8.setBackground(new java.awt.Color(102, 102, 102));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout3.png"))); // NOI18N
        jButton8.setText("Đăng xuất ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton6)
                .addGap(240, 240, 240)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            themMuonTra();
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadData();
        JOptionPane.showMessageDialog(this, "Thêm hóa đơn mượn trả thành công!");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            new ChiTietMuonTra().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        mamuontratt.setText("");
        tennhanvientt.setText("");

        tendocgiatt.setText("");
        ngaymuontt.setDate(null);
        ngayhentratt.setDate(null);
        tiencoctt.setText("");

    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new TrangChu().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            // TODO add your handling code here:
            suaMuonTra();
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadData();
        JOptionPane.showMessageDialog(this, "Sửa hóa đơn mượn trả thành công!");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int chose = JOptionPane.showConfirmDialog(null, "Xác nhận", "Thêm", 0);
        if (chose == 0) {
            try {
                xoaMuonTra();
            } catch (SQLException ex) {
                Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
            }
            loadData();
            JOptionPane.showMessageDialog(this, "Xóa hóa đơn mượn trả thành công!");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            // TODO add your handling code here:
            new ThongKeMuonTra().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();


    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int chose = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn đăng xuất không?", "Xác nhận", 0);
        if (chose == 0) {

            new Menu().setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void mamuontratimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mamuontratimkiemActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_mamuontratimkiemActionPerformed

    private void mamuontrachonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mamuontrachonActionPerformed
        // TODO add your handling code here:
//        DefaultComboBoxModel model = new DefaultComboBoxModel();
//        String sql = "select idMuonTra from muon_tra ;";
//        Statement statement = null;
//        ResultSet resultSet = null;
//        try {
//            statement = connection.createStatement();
//            resultSet = statement.executeQuery(sql);
//            while (resultSet.next()) {
////                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
//                Vector vector = new Vector();
//                vector.add(resultSet.getInt("idMuonTra"));
//                model.addElement(vector);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//
//        }
//
//        mamuontratimkiem.setModel(model);
        ArrayList<MuonTraType> listMuonTra = new ArrayList<>();
        try {
            listMuonTra = MuonTraType.getList();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < listMuonTra.size(); i++) {
            model.addElement(listMuonTra.get(i).getIdMuonTra());

        }
        mamuontratimkiem.setModel(model);
    }//GEN-LAST:event_mamuontrachonActionPerformed

    private void madocgiachonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_madocgiachonActionPerformed
        // TODO add your handling code here:

//        DefaultComboBoxModel model = new DefaultComboBoxModel();
//        String sql = "select idDocGia from docgia ;";
//        Statement statement = null;
//        ResultSet resultSet = null;
//        try {
//            statement = connection.createStatement();
//            resultSet = statement.executeQuery(sql);
//            while (resultSet.next()) {
////                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
//                Vector vector = new Vector();
//                vector.add(resultSet.getInt("idDocGia"));
//                model.addElement(vector);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//
//        }
//        madocgiatimkiem.setModel(model);
        ArrayList<DocGiaType> listDocGia = new ArrayList<>();
        try {
            listDocGia = DocGiaType.getList();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < listDocGia.size(); i++) {
            model.addElement(listDocGia.get(i).getIdDocGia());

        }
        madocgiatimkiem.setModel(model);


    }//GEN-LAST:event_madocgiachonActionPerformed

    private void manhanvienchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manhanvienchonActionPerformed
        // TODO add your handling code here:
//        DefaultComboBoxModel model = new DefaultComboBoxModel();
//        String sql = "select idNhanVien from nhanvien ;";
//        Statement statement = null;
//        ResultSet resultSet = null;
//        try {
//            statement = connection.createStatement();
//            resultSet = statement.executeQuery(sql);
//            while (resultSet.next()) {
////                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
//                Vector vector = new Vector();
//                vector.add(resultSet.getInt("idNhanVien"));
//                model.addElement(vector);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//
//        }
//        manhanvientiemkiem.setModel(model);
        ArrayList<NhanVienType> listNhanVien = new ArrayList<>();
        try {
            listNhanVien = NhanVienType.getList();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < listNhanVien.size(); i++) {
            model.addElement(listNhanVien.get(i).getIdNhanVien());

        }
        manhanvientiemkiem.setModel(model);

    }//GEN-LAST:event_manhanvienchonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (mamuontrachon.isSelected()) {
            timKiemTheoMaMT();
        } else if (madocgiachon.isSelected()) {
            timKiemTheoMaDocGia();
        } else if (manhanvienchon.isSelected()) {
            timKiemTheoMaNhanVien();
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void madocgiattIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_madocgiattIActionPerformed
        // TODO add your handling code here:
        String machon = madocgiattI.getSelectedItem().toString();
        int machonint = Integer.parseInt(machon);
        for (int i = 0; i < listDocGia.size(); i++) {
            if (listDocGia.get(i).getIdDocGia() == machonint) {
                tendocgiatt.setText(listDocGia.get(i).getTenDocGia());
            }
        }

    }//GEN-LAST:event_madocgiattIActionPerformed

    private void madocgiatimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_madocgiatimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_madocgiatimkiemActionPerformed

    private void manhanvienttIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manhanvienttIActionPerformed
        // TODO add your handling code here:
        String machon = manhanvienttI.getSelectedItem().toString();
        int machonint = Integer.parseInt(machon);
        for (int i = 0; i < listNhanVien.size(); i++) {
            if (listNhanVien.get(i).getIdNhanVien() == machonint) {
                tennhanvientt.setText(listNhanVien.get(i).getTenNhanVien());
            }
        }


    }//GEN-LAST:event_manhanvienttIActionPerformed

    private void tennhanvienttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tennhanvienttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tennhanvienttActionPerformed

    private void manhanvientiemkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manhanvientiemkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manhanvientiemkiemActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            String type = file.getName().substring(file.getName().lastIndexOf(".") + 1);

            if (type.equals("xls") || type.equals("xlsx")) {
                try {
                    ArrayList<MuonTraType> list = ExcelHelper.readMuonTras(file);
                    int re = -1;
                    for (MuonTraType o : list) {
                        re = MuonTraType.add(o);
                        if (re != 1) {
                            break;
                        }
                    }
                    if (re == 1) {
                        loadData();
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();

            try {
                WordHelper.writeMuonTra(file, listMuonTra, "THÔNG TIN MƯỢN TRẢ CHUNG");
            } catch (IOException ex) {
                Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Xuất file thành công");

        }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MuonTra().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MuonTra.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangmuontra;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton madocgiachon;
    private javax.swing.JComboBox madocgiatimkiem;
    public static javax.swing.JComboBox madocgiattI;
    private javax.swing.JRadioButton mamuontrachon;
    private javax.swing.JComboBox mamuontratimkiem;
    public static javax.swing.JTextField mamuontratt;
    private javax.swing.JRadioButton manhanvienchon;
    private javax.swing.JComboBox manhanvientiemkiem;
    public static javax.swing.JComboBox manhanvienttI;
    public static com.toedter.calendar.JDateChooser ngayhentratt;
    public static com.toedter.calendar.JDateChooser ngaymuontt;
    public static javax.swing.JTextField tendocgiatt;
    public static javax.swing.JTextField tennhanvientt;
    public static javax.swing.JTextField tiencoctt;
    // End of variables declaration//GEN-END:variables

    private void loadData() {

        bangmuontra.removeAll();
        String[] columns = {"Mã mượn trả", "Mã nhân viên", "Mã độc giả", "Ngày mượn ", "Ngày hẹn trả", "Tiền cọc"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from muon_tra";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idMuonTra"));
                vector.add(resultSet.getInt("idNhanVien"));
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getDate("ngayMuon"));
                vector.add(resultSet.getDate("ngayHenTra"));
                vector.add(resultSet.getDouble("tienCoc"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangmuontra.setModel(model);
        bangmuontra.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (bangmuontra.getSelectedRow() >= 0) {
                    mamuontratt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 0).toString());
                    //ma nhan vien : 
                    String maNhanVientableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 1).toString();
                    int maNhanVientableInt = Integer.parseInt(maNhanVientableString);
                    for (int i = 0; i < listNhanVien.size(); i++) {
                        if (maNhanVientableInt == listNhanVien.get(i).getIdNhanVien()) {
                            manhanvienttI.setSelectedIndex(i);
                        }
                    }
                    //ma doc gia: 
                    String maDocGiatableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 2).toString();
                    int maDocGiatableInt = Integer.parseInt(maDocGiatableString);
                    for (int i = 0; i < listDocGia.size(); i++) {
                        if (maDocGiatableInt == listDocGia.get(i).getIdDocGia()) {
                            madocgiattI.setSelectedIndex(i);
                        }
                    }
                    ngaymuontt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 3));
                    ngayhentratt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 4));
                    tiencoctt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 5).toString());

                }
            }

        });

    }
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    private void themMuonTra() throws SQLException {
        //doc id muon tra
        String sidMuonTra = "";
        sidMuonTra = mamuontratt.getText();
        int idMuonTra = Integer.parseInt(sidMuonTra);

        //doc id nhan vien 
        String sidNhanVien = "";
        sidNhanVien = manhanvienttI.getSelectedItem().toString();
        int idNhanVien = Integer.parseInt(sidNhanVien);
        //doc id doc gia
        String sidDocGia = "";
        sidDocGia = madocgiattI.getSelectedItem().toString();
        int idDocGia = Integer.parseInt(sidDocGia);
        //doc the loai 
        String ngayMuon = dateFormat.format(ngaymuontt.getDate());

        // ngayMuon = ngaymuontt.getText();
        //doc nam xuat ban 
        String ngayHenTra = dateFormat.format(ngayhentratt.getDate());

        //ngayHenTra = ngayhentratt.getText();
        //doc nha xuat ban 
        String stienCoc = new String();
        stienCoc = tiencoctt.getText();
        Double tienCoc;
        tienCoc = Double.parseDouble(stienCoc);

        String sql1 = "insert into quan_ly_thu_vien.muon_tra (idMuonTra, idNhanVien, idDocGia, ngayMuon, ngayHenTra, tienCoc) values ('" + idMuonTra + "','" + idNhanVien + "', '" + idDocGia + "', '" + ngayMuon + "', '" + ngayHenTra + "', '" + tienCoc + "');";
        Statement statement = null;

        statement = connection.createStatement();
        statement.executeUpdate(sql1);
    }

    private void suaMuonTra() throws SQLException {
        //doc id muon tra
        String sidMuonTra = "";
        sidMuonTra = mamuontratt.getText();
        int idMuonTra = Integer.parseInt(sidMuonTra);

        //doc id nhan vien 
        String sidNhanVien = "";
        sidNhanVien = manhanvienttI.getSelectedItem().toString();
        int idNhanVien = Integer.parseInt(sidNhanVien);
        //doc id doc gia
        String sidDocGia = "";
        sidDocGia = madocgiattI.getSelectedItem().toString();
        int idDocGia = Integer.parseInt(sidDocGia);

        String ngayMuon = dateFormat.format(ngaymuontt.getDate());

        String ngayHenTra = dateFormat.format(ngayhentratt.getDate());

        String stienCoc = tiencoctt.getText();

        Double tienCoc = Double.parseDouble(stienCoc);

        String sql1 = "update  muon_tra set   idNhanVien='" + idNhanVien + "', idDocGia='" + idDocGia + "',ngayMuon='" + ngayMuon + "',ngayHenTra='" + ngayHenTra + "',tienCoc='" + tienCoc + "'   where idMuonTra='" + idMuonTra + "';";

        Statement statement = null;

        statement = connection.createStatement();
        statement.executeUpdate(sql1);

    }

    public void xoaMuonTra() throws SQLException {
        String sId = "";
        sId = mamuontratt.getText();
        int idMuonTra = Integer.parseInt(sId);

        String sql1 = "delete from muon_tra where idMuonTra = " + idMuonTra;
        Statement statement = null;

        statement = connection.createStatement();
        statement.executeUpdate(sql1);
    }

    private void timKiemTheoMaMT() {
        bangmuontra.removeAll();
        String sidMuonTra = mamuontratimkiem.getSelectedItem().toString();
        int idMuonTra = Integer.parseInt(sidMuonTra);
        String[] columns = {"Mã mượn trả", "Mã nhân viên", "Mã độc giả", "Ngày mượn", "Ngày hẹn trả", "Tiền cọc"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = " select * from muon_tra where idMuonTra ='" + idMuonTra + "'; ";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idMuonTra"));
                vector.add(resultSet.getInt("idNhanVien"));
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getDate("ngayMuon"));
                vector.add(resultSet.getDate("ngayHenTra"));
                vector.add(resultSet.getDouble("tienCoc"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangmuontra.setModel(model);
        bangmuontra.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (bangmuontra.getSelectedRow() >= 0) {
                    mamuontratt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 0).toString());
                    //ma nhan vien : 
                    String maNhanVientableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 1).toString();
                    int maNhanVientableInt = Integer.parseInt(maNhanVientableString);
                    for (int i = 0; i < listNhanVien.size(); i++) {
                        if (maNhanVientableInt == listNhanVien.get(i).getIdNhanVien()) {
                            manhanvienttI.setSelectedIndex(i);
                        }
                    }
                    //ma doc gia: 
                    String maDocGiatableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 2).toString();
                    int maDocGiatableInt = Integer.parseInt(maDocGiatableString);
                    for (int i = 0; i < listDocGia.size(); i++) {
                        if (maDocGiatableInt == listDocGia.get(i).getIdDocGia()) {
                            madocgiattI.setSelectedIndex(i);
                        }
                    }
                    ngaymuontt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 3));
                    ngayhentratt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 4));
                    tiencoctt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 5).toString());

                }
            }

        });

    }

    private void timKiemTheoMaDocGia() {
        bangmuontra.removeAll();
        String sidDocGia = madocgiatimkiem.getSelectedItem().toString();
        int idDocGia = Integer.parseInt(sidDocGia);
        String[] columns = {"Mã mượn trả", "Mã nhân viên", "Mã độc giả", "Ngày mượn", "Ngày hẹn trả", "Tiền cọc"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = " select * from muon_tra where idDocGia ='" + idDocGia + "'; ";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idMuonTra"));
                vector.add(resultSet.getInt("idNhanVien"));
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getDate("ngayMuon"));
                vector.add(resultSet.getDate("ngayHenTra"));
                vector.add(resultSet.getDouble("tienCoc"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangmuontra.setModel(model);
        bangmuontra.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (bangmuontra.getSelectedRow() >= 0) {
                    mamuontratt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 0).toString());
                    //ma nhan vien : 
                    String maNhanVientableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 1).toString();
                    int maNhanVientableInt = Integer.parseInt(maNhanVientableString);
                    for (int i = 0; i < listNhanVien.size(); i++) {
                        if (maNhanVientableInt == listNhanVien.get(i).getIdNhanVien()) {
                            manhanvienttI.setSelectedIndex(i);
                        }
                    }
                    //ma doc gia: 
                    String maDocGiatableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 2).toString();
                    int maDocGiatableInt = Integer.parseInt(maDocGiatableString);
                    for (int i = 0; i < listDocGia.size(); i++) {
                        if (maDocGiatableInt == listDocGia.get(i).getIdDocGia()) {
                            madocgiattI.setSelectedIndex(i);
                        }
                    }
                    ngaymuontt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 3));
                    ngayhentratt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 4));
                    tiencoctt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 5).toString());

                }
            }

        });
    }

    private void timKiemTheoMaNhanVien() {
        bangmuontra.removeAll();
        String sidNhanVien = manhanvientiemkiem.getSelectedItem().toString();
        int idNhanVien = Integer.parseInt(sidNhanVien);
        String[] columns = {"Mã mượn trả", "Mã nhân viên", "Mã độc giả", "Ngày mượn", "Ngày hẹn trả", "Tiền cọc"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = " select * from muon_tra where idNhanVien ='" + idNhanVien + "'; ";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idMuonTra"));
                vector.add(resultSet.getInt("idNhanVien"));
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getDate("ngayMuon"));
                vector.add(resultSet.getDate("ngayHenTra"));
                vector.add(resultSet.getDouble("tienCoc"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangmuontra.setModel(model);
        bangmuontra.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (bangmuontra.getSelectedRow() >= 0) {
                    mamuontratt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 0).toString());
                    //ma nhan vien : 
                    String maNhanVientableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 1).toString();
                    int maNhanVientableInt = Integer.parseInt(maNhanVientableString);
                    for (int i = 0; i < listNhanVien.size(); i++) {
                        if (maNhanVientableInt == listNhanVien.get(i).getIdNhanVien()) {
                            manhanvienttI.setSelectedIndex(i);
                        }
                    }
                    //ma doc gia: 
                    String maDocGiatableString = bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 2).toString();
                    int maDocGiatableInt = Integer.parseInt(maDocGiatableString);
                    for (int i = 0; i < listDocGia.size(); i++) {
                        if (maDocGiatableInt == listDocGia.get(i).getIdDocGia()) {
                            madocgiattI.setSelectedIndex(i);
                        }
                    }
                    ngaymuontt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 3));
                    ngayhentratt.setDate((Date) bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 4));
                    tiencoctt.setText(bangmuontra.getValueAt(bangmuontra.getSelectedRow(), 5).toString());

                }
            }

        });
    }

    public static int docMaMuonTra() {
        int maMuonTraDoc = 0;
        maMuonTraDoc = Integer.parseInt(mamuontratt.getText());

        return maMuonTraDoc;
    }

    public static int docMaNhanVien() {
        int maNhanVienDoc = Integer.parseInt(manhanvienttI.getSelectedItem().toString());

        return maNhanVienDoc;
    }

    public static int docMaDocGia() {
        int maDocGiaDoc = Integer.parseInt(madocgiattI.getSelectedItem().toString());

        return maDocGiaDoc;
    }

    public static String docNgayMuon() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        String ngayMuon = dateFormat.format(ngaymuontt.getDate());

        return ngayMuon;
    }

    public static String docNgayHenTra() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        String ngayHenTra = dateFormat.format(ngayhentratt.getDate());
        return ngayHenTra;
    }

    public static Double docTienCoc() {

        Double tienCoc = Double.parseDouble(tiencoctt.getText());
        return tienCoc;
    }

    public void comboboxmaDG() {

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < listDocGia.size(); i++) {
            model.addElement(listDocGia.get(i).getIdDocGia());

        }
        madocgiattI.setModel(model);

    }

    public void comboboxmaNV() {

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < listNhanVien.size(); i++) {
            model.addElement(listNhanVien.get(i).getIdNhanVien());

        }
        manhanvienttI.setModel(model);
    }

}
