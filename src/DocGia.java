
import java.awt.ComponentOrientation;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Cell;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author MyPC
 */
public class DocGia extends javax.swing.JFrame {

    KetNoiQLTV ketNoiQLTV = null;
    Connection connection = null;

    /**
     * Creates new form DocGia
     */
    ArrayList<DocGiaType> listDocGia;

    public DocGia() throws ClassNotFoundException, SQLException {
        listDocGia = DocGiaType.getList();
        ketNoiQLTV = new KetNoiQLTV();
        connection = ketNoiQLTV.getJDBCConnection();
        initComponents();
        this.setLocationRelativeTo(null);
        loadData();

    }

    DocGia(int aInt, String string, String string0, String string1, String string2, String string3, String string4, String string5) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @SuppressWarnings("unchecked")

    //ham doc du lieu ra bang : 
    private void loadData() {
        bangdocgia.removeAll();
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));

                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);
        bangdocgia.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (bangdocgia.getSelectedRow() >= 0) {
                    madocgiatt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 0).toString());
                    tendocgiatt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 1).toString());
                    gioitinhtt.setSelectedItem(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 2).toString());
                    namsinhtt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 3).toString());
                    sdttt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 4).toString());
                    diachitt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 5).toString());
                    emailtt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 6).toString());
                    nghenghieptt.setText(bangdocgia.getValueAt(bangdocgia.getSelectedRow(), 7).toString());

                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        madocgiachon = new javax.swing.JRadioButton();
        tendgchon = new javax.swing.JRadioButton();
        gioitinhchon = new javax.swing.JRadioButton();
        namsinhchon = new javax.swing.JRadioButton();
        diachichon = new javax.swing.JRadioButton();
        nghenghiepchon = new javax.swing.JRadioButton();
        timkiem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        madocgiatt = new javax.swing.JTextField();
        tendocgiatt = new javax.swing.JTextField();
        namsinhtt = new javax.swing.JTextField();
        sdttt = new javax.swing.JTextField();
        diachitt = new javax.swing.JTextField();
        emailtt = new javax.swing.JTextField();
        nghenghieptt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        gioitinhtt = new javax.swing.JComboBox();
        jButton10 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bangdocgia = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HÀN TRUNG KIÊN 20162220");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("TÌM KIẾM ĐỘC GIẢ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonGroup1.add(madocgiachon);
        madocgiachon.setText("Mã độc giả");

        buttonGroup1.add(tendgchon);
        tendgchon.setText("Tên độc giả");

        buttonGroup1.add(gioitinhchon);
        gioitinhchon.setText("Giới tính");

        buttonGroup1.add(namsinhchon);
        namsinhchon.setText("Năm sinh");

        buttonGroup1.add(diachichon);
        diachichon.setText("Địa chỉ");

        buttonGroup1.add(nghenghiepchon);
        nghenghiepchon.setText("Nghề nghiệp");

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Search-icon.png"))); // NOI18N
        jButton1.setText("Tìm kiếm ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(madocgiachon)
                            .addComponent(gioitinhchon)
                            .addComponent(diachichon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tendgchon)
                            .addComponent(namsinhchon)
                            .addComponent(nghenghiepchon))
                        .addGap(26, 26, 26))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(madocgiachon)
                    .addComponent(tendgchon))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gioitinhchon)
                    .addComponent(namsinhchon))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diachichon)
                    .addComponent(nghenghiepchon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("NHẬP THÔNG TIN ĐỘC GIẢ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(137, 137, 137))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Mã độc giả:");

        jLabel5.setText("Tên độc giả:");

        jLabel6.setText("Giới tính:");

        jLabel7.setText("Năm sinh:");

        jLabel8.setText("Số điện thoại:");

        jLabel9.setText("Địa chỉ:");

        jLabel10.setText("Email:");

        jLabel11.setText("Nghề nghiệp:");

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insert-image-icon (1).png"))); // NOI18N
        jButton2.setText("Thêm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-document-edit-icon.png"))); // NOI18N
        jButton3.setText("Sửa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 102, 102));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Error-icon.png"))); // NOI18N
        jButton4.setText("Xóa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gioitinhtt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nam", "Nữ" }));

        jButton10.setBackground(new java.awt.Color(102, 102, 102));
        jButton10.setText("Reset ");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(madocgiatt)
                    .addComponent(tendocgiatt)
                    .addComponent(namsinhtt)
                    .addComponent(sdttt)
                    .addComponent(diachitt)
                    .addComponent(emailtt)
                    .addComponent(nghenghieptt)
                    .addComponent(gioitinhtt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(86, 86, 86))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jButton10)
                .addGap(49, 49, 49))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(madocgiatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tendocgiatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(gioitinhtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(namsinhtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sdttt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(diachitt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(emailtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(nghenghieptt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("HIỂN THỊ ĐỘC GIẢ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton5.setBackground(new java.awt.Color(102, 102, 102));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow-back-icon.png"))); // NOI18N
        jButton5.setText("Quay lại");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Programming-Show-Property-icon.png"))); // NOI18N
        jButton7.setText("Hiển thị toàn bộ độc giả ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        jButton8.setBackground(new java.awt.Color(102, 102, 102));
        jButton8.setText("Thêm vào 1 file ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(102, 102, 102));
        jButton9.setText("Xuất ra 1 file ");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(102, 102, 102));
        jButton6.setText("Thống kê ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addGap(16, 16, 16))
        );

        jButton11.setBackground(new java.awt.Color(102, 102, 102));
        jButton11.setText("Đăng xuất ");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        bangdocgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(bangdocgia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton5)
                .addGap(234, 234, 234)
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(281, 281, 281)
                .addComponent(jButton11))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5)
                        .addComponent(jButton7))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new TrangChu().setVisible(true);
        this.dispose();


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (madocgiachon.isSelected()) {
            timKiemTheoMa();
        } else if (tendgchon.isSelected()) {
            timKiemTheoTenDocGia();
        } else if (gioitinhchon.isSelected()) {
            timKiemTheoGioiTinhDocGia();
        } else if (namsinhchon.isSelected()) {
            timKiemTheoNamSinhDocGia();
        } else if (diachichon.isSelected()) {
            timKiemTheoDiaChiDocGia();
        } else if (nghenghiepchon.isSelected()) {
            timKiemTheoNgheNghiepDocGia();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            themDocGia();
        } catch (SQLException ex) {
            Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadData();
        JOptionPane.showMessageDialog(this, "Thêm độc giả thành công!");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int chose = JOptionPane.showConfirmDialog(null, "Xác nhận", "Thêm", 0);
        if (chose == 0) {
            try {
                xoaDocGia();
            } catch (SQLException ex) {
                Logger.getLogger(Sach.class.getName()).log(Level.SEVERE, null, ex);
            }
            loadData();
            JOptionPane.showMessageDialog(this, "Xóa độc giả thành công!");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            suaDocGia();
        } catch (SQLException ex) {
            Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadData();
        JOptionPane.showMessageDialog(this, "Sửa độc giả thành công!");

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        madocgiatt.setText("");
        tendocgiatt.setText("");

        namsinhtt.setText("");
        sdttt.setText("");

        diachitt.setText("");
        emailtt.setText("");
        nghenghieptt.setText("");


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            String type = file.getName().substring(file.getName().lastIndexOf(".") + 1);
            System.out.println(type);

            if (type.equals("xls") || type.equals("xlsx")) {
                try {
                    ArrayList<DocGiaType> list = ExcelHelper.readDocGias(file);
                    int re = -1;
                    for (DocGiaType o : list) {
                        re = DocGiaType.add(o);
                        if (re != 1) {
                            break;
                        }
                    }
                    if (re == 1) {
                        loadData();
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            // TODO add your handling code here:
            new ThongKeDocGia().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int chose = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn đăng xuất không?", "Xác nhận", 0);
        if (chose == 0) {

            new Menu().setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:

        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();

            try {
                WordHelper.writeDG(file, listDocGia, "THÔNG TIN ĐỘC GIẢ");
                JOptionPane.showMessageDialog(null, "Xuất file thành công");

            } catch (IOException ex) {
                Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
            }

        }

    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DocGia().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(DocGia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangdocgia;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton diachichon;
    private javax.swing.JTextField diachitt;
    private javax.swing.JTextField emailtt;
    private javax.swing.JRadioButton gioitinhchon;
    private javax.swing.JComboBox gioitinhtt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton madocgiachon;
    private javax.swing.JTextField madocgiatt;
    private javax.swing.JRadioButton namsinhchon;
    private javax.swing.JTextField namsinhtt;
    private javax.swing.JRadioButton nghenghiepchon;
    private javax.swing.JTextField nghenghieptt;
    private javax.swing.JTextField sdttt;
    private javax.swing.JRadioButton tendgchon;
    private javax.swing.JTextField tendocgiatt;
    private javax.swing.JTextField timkiem;
    // End of variables declaration//GEN-END:variables

    private void timKiemTheoMa() {
        bangdocgia.removeAll();
        String s;
        s = timkiem.getText();
        int idNhapVao;
        idNhapVao = Integer.parseInt(s);
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia where idDocGia=" + idNhapVao;
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));
                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);
    }

    private void timKiemTheoTenDocGia() {
        bangdocgia.removeAll();
        String tenNhapVao = timkiem.getText();
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia where tenDocGia='" + tenNhapVao + "'";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));
                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);
    }

    private void timKiemTheoGioiTinhDocGia() {
        bangdocgia.removeAll();
        String gioiTinhNhapVao = timkiem.getText();
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia where gioiTinhDocGia='" + gioiTinhNhapVao + "'";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));
                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);
    }

    private void timKiemTheoNamSinhDocGia() {
        bangdocgia.removeAll();
        String namSinhNhapVao = timkiem.getText();
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia where namSinhDocGia='" + namSinhNhapVao + "'";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));
                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);
    }

    private void timKiemTheoDiaChiDocGia() {
        bangdocgia.removeAll();
        String diaChiNhapVao = timkiem.getText();
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia where diaChiDocGia='" + diaChiNhapVao + "'";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));
                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);
    }

    private void timKiemTheoNgheNghiepDocGia() {
        bangdocgia.removeAll();
        String ngheNghiepNhapVao = timkiem.getText();
        String[] columns = {"Mã độc giả", "Tên độc giả", "Giới tính", "Năm sinh", "Số điện thoại", "Địa chỉ", "Email", "Nghề nghiệp"};

        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "select * from docgia where ngheNghiepDocGia='" + ngheNghiepNhapVao + "'";
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
//                JOptionPane.showMessageDialog(null, resultSet.getDouble("giaTien"));
                Vector vector = new Vector();
                vector.add(resultSet.getInt("idDocGia"));
                vector.add(resultSet.getString("tenDocGia"));
                vector.add(resultSet.getString("gioiTinhDocGia"));
                vector.add(resultSet.getString("namSinhDocGia"));
                vector.add(resultSet.getString("sdtDocGia"));
                vector.add(resultSet.getString("diaChiDocGia"));
                vector.add(resultSet.getString("emailDocGia"));
                vector.add(resultSet.getString("ngheNghiepDocGia"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
        bangdocgia.setModel(model);

    }

    private void themDocGia() throws SQLException {
        //doc id
        String sId = "";
        sId = madocgiatt.getText();
        int idDocGia = Integer.parseInt(sId);

        //doc ten 
        String tenDocGia = "";
        tenDocGia = tendocgiatt.getText();
        //doc gioi tinh:
        String gioiTinhDocGia = "";
        gioiTinhDocGia = gioitinhtt.getSelectedItem().toString();
        //doc the loai 
        String namSinhDocGia = "";
        namSinhDocGia = namsinhtt.getText();
        //doc nam xuat ban 
        String sdtDocGia = "";
        sdtDocGia = sdttt.getText();
        //doc nha xuat ban 
        String diaChiDocGia = "";
        diaChiDocGia = diachitt.getText();
        //doc ten tac gia 
        String emailDocGia = "";
        emailDocGia = emailtt.getText();
        //doc nghe nghiep:
        String ngheNghiepDocGia = "";
        ngheNghiepDocGia = nghenghieptt.getText();

        String sql1 = "insert into quan_ly_thu_vien.docgia (idDocGia, tenDocGia, gioiTinhDocGia, namSinhDocGia, sdtDocGia, diaChiDocGia, emailDocGia,ngheNghiepDocGia) values ('" + idDocGia + "','" + tenDocGia + "', '" + gioiTinhDocGia + "', '" + namSinhDocGia + "', '" + sdtDocGia + "', '" + diaChiDocGia + "',' " + emailDocGia + "',' " + ngheNghiepDocGia + "');";
        Statement statement = null;
        ResultSet resultSet = null;

        statement = connection.createStatement();
        statement.executeUpdate(sql1);
    }

    private void xoaDocGia() throws SQLException {
        String sId = "";
        sId = madocgiatt.getText();
        int idDocGia = Integer.parseInt(sId);

        String sql1 = "delete from quan_ly_thu_vien.docgia where idDocGia = " + idDocGia;
        Statement statement = null;
        ResultSet resultSet = null;

        statement = connection.createStatement();
        statement.executeUpdate(sql1);
    }

    private void suaDocGia() throws SQLException {
        //doc id
        String sId = "";
        sId = madocgiatt.getText();
        int idDocGia = Integer.parseInt(sId);

        //doc ten 
        String tenDocGia = "";
        tenDocGia = tendocgiatt.getText();
        //doc gioi tinh:
        String gioiTinhDocGia = "";
        gioiTinhDocGia = gioitinhtt.getSelectedItem().toString();
        //doc the loai 
        String namSinhDocGia = "";
        namSinhDocGia = namsinhtt.getText();
        //doc nam xuat ban 
        String sdtDocGia = "";
        sdtDocGia = sdttt.getText();
        //doc nha xuat ban 
        String diaChiDocGia = "";
        diaChiDocGia = diachitt.getText();
        //doc ten tac gia 
        String emailDocGia = "";
        emailDocGia = emailtt.getText();
        //doc nghe nghiep:
        String ngheNghiepDocGia = "";
        ngheNghiepDocGia = nghenghieptt.getText();

        String sql1 = "update  docgia set   tenDocGia='" + tenDocGia + "', gioiTinhDocGia='" + gioiTinhDocGia + "',namSinhDocGia='" + namSinhDocGia + "',sdtDocGia='" + sdtDocGia + "',diaChiDocGia='" + diaChiDocGia + "',emailDocGia='" + emailDocGia + "',ngheNghiepDocGia='" + ngheNghiepDocGia + "'   where idDocGia='" + idDocGia + "';";

        Statement statement = null;
        ResultSet resultSet = null;

        statement = connection.createStatement();
        statement.executeUpdate(sql1);
    }

//    private void themFileExcel() throws FileNotFoundException, IOException, BiffException, SQLException {
//
//        File file = new File("D:\\java_netbean\\QuanLyThuVien\\Book1.xls");
//        Workbook wb = Workbook.getWorkbook(file);
//        Sheet sheet = wb.getSheet(0);
//        int rows = sheet.getRows();
//        int cols = sheet.getColumns();
//        
//        int idDocGia = 0;
//        String tenDocGia = "";
//        String gioiTinhDocGia = "";
//        String namSinhDocGia = "";
//        String sdtDocGia = "";
//        String diaChiDocGia = "";
//        String emailDocGia = "";
//        String ngheNghiepDocGia = "";
//
//        for (int row = 0; row < rows; row++) {
//            for (int col = 0; col < cols; col++) {
//                if (col == 0) {
//                    idDocGia = Integer.parseInt(sheet.getCell(col, row).getContents());
//                }
//                if (col == 1) {
//                    tenDocGia = sheet.getCell(col, row).getContents().toString();
//                }
//                if (col == 2) {
//                    gioiTinhDocGia = sheet.getCell(col, row).getContents().toString();
//                }
//                if (col == 3) {
//                    namSinhDocGia = sheet.getCell(col, row).getContents().toString();
//
//                }
//                if (col == 4) {
//                    sdtDocGia = sheet.getCell(col, row).getContents().toString();
//
//                }
//                if (col == 5) {
//                    diaChiDocGia = sheet.getCell(col, row).getContents().toString();
//
//                }
//                if (col == 6) {
//                    emailDocGia = sheet.getCell(col, row).getContents().toString();
//
//                }
//                if (col == 7) {
//                    ngheNghiepDocGia = sheet.getCell(col, row).getContents().toString();
//
//                }
//
//            }
//            String sql1 = "insert into quan_ly_thu_vien.docgia (idDocGia, tenDocGia, gioiTinhDocGia, namSinhDocGia, sdtDocGia, diaChiDocGia, emailDocGia,ngheNghiepDocGia) values ('" + idDocGia + "','" + tenDocGia + "', '" + gioiTinhDocGia + "', '" + namSinhDocGia + "', '" + sdtDocGia + "', '" + diaChiDocGia + "',' " + emailDocGia + "',' " + ngheNghiepDocGia + "');";
//            Statement statement = null;
//            ResultSet resultSet = null;
//
//            statement = connection.createStatement();
//            statement.executeUpdate(sql1);
//        }
    /**
     *
     */
    /**
     *
     */
}
